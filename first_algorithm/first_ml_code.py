#preloaded dataset that contains information about terrains and prices in Boston
from sklearn.datasets import load_boston
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_absolute_error

# the regressor is an algorithm which has, as output, a number that indicates
# the estimate of what we are anticipating like the number of goal of a soccer player

def printDescription(dataset):
    #printing a description of the dataset
    print(dataset['DESCR'])

    #printig all the data of the dataset
    for data in dataset['data']:
        print(data)
        print()


def stratingTheTraining(dataset):

    # matrix which contains the features of the houses in Boston
    X = dataset['data']
    # matrix which contains the price to predict
    y = dataset['target']

    # creating the model
    model = LinearRegression()

    # training the model starting from the data. the model will try to find the pattern between the data
    model.fit(X, y)

    # list that contains the predictions generated by the model
    predictions = model.predict(X)

    # it takes in input the real data and the predictions created by the model and, his ouput, is a number that
    # indicates how good is the model. More big it is, less the model is good
    mae = mean_absolute_error(y, predictions)

    print('MAE: '+str(mae))

if __name__ == '__main__':
    # load the Boston's dataset into the var dataset
    dataset = load_boston()
    stratingTheTraining(dataset)

